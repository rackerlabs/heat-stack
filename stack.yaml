heat_template_version: 2013-05-23
description: |
  Sample Heat template that creates stack tiers, injects a simple
  BASH script through cloud-init that installs Chef-client and
  joins a Chef Server.

parameter_groups:

- label: Tier 1
  parameters:
  - t1_load_balancer

- label: Tier 2
  parameters:
  - t2_name
  - t2_image
  - t2_flavor
  - t2_count
  - t2_role

- label: Tier 3
  parameters:
  - t3_name
  - t3_image
  - t3_flavor
  - t3_count
  - t3_role

- label: Tier 4
  parameters:
  - t4_name
  - t4_image
  - t4_flavor
  - t4_count
  - t4_role

- label: Chef Parameters
  parameters:
  - chef_server_url
  - chef_version
  - organization
  - chef_env
  - validation_key

parameters:
  t1_load_balancer:
    label: Tier 1 Load Balancer
    description: Load Balancer that points to nodes in Tier 2.
    type: string
    default: tier1LB
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z0-9]([a-zA-Z0-9._-])*$"
      description: |
        Must begin with a letter or number and be alphanumeric or '-' and '.'

  t2_name:
    label: Tier 2 Name
    description: Base name for Tier 2
    type: string
    default: tier2
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z0-9]([a-zA-Z0-9._-])*$"
      description: |
        Must begin with a letter or number and be alphanumeric or '-' and '.'

  t2_image:
    label: Tier 2 Image
    description: |
      Optional: Server image used for the server created
      as a part of this deployment.
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - CentOS 6.5
      - CentOS 6.5 (PVHVM)
      - CentOS 7 (PVHVM)
      - Debian 6.06 (Squeeze)
      - Debian 7 (Wheezy) (PVHVM)
      - Red Hat Enterprise Linux 6.5
      - Red Hat Enterprise Linux 6.5 (PVHVM)
      - Ubuntu 12.04 LTS (Precise Pangolin)
      - Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
      - Ubuntu 14.04 LTS (Trusty Tahr)
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  t2_flavor:
    label: Tier 2 Flavor
    description: |
      Optional: Rackspace Cloud Server flavor to use. The size is based on the
      amount of RAM for the provisioned server.
    type: string
    default: 1 GB Performance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  t2_count:
    label: Tier 2 Node Count
    description: Number of Tier 2 nodes to create.
    type: number
    default: 1

  t2_role:
    label: Tier 2 Role
    description: |
      Optional: Chef Role. Will default to "_default"
    type: string
    default: webserver

  t3_name:
    label: Tier 3 Name
    description: Base name for Tier 3
    type: string
    default: tier3
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z0-9]([a-zA-Z0-9._-])*$"
      description: |
        Must begin with a letter or number and be alphanumeric or '-' and '.'

  t3_image:
    label: Tier 3 Image
    description: |
      Optional: Server image used for the server created
      as a part of this deployment.
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - CentOS 6.5
      - CentOS 6.5 (PVHVM)
      - CentOS 7 (PVHVM)
      - Debian 6.06 (Squeeze)
      - Debian 7 (Wheezy) (PVHVM)
      - Red Hat Enterprise Linux 6.5
      - Red Hat Enterprise Linux 6.5 (PVHVM)
      - Ubuntu 12.04 LTS (Precise Pangolin)
      - Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
      - Ubuntu 14.04 LTS (Trusty Tahr)
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  t3_flavor:
    label: Tier 3 Flavor
    description: |
      Optional: Rackspace Cloud Server flavor to use. The size is based on the
      amount of RAM for the provisioned server.
    type: string
    default: 1 GB Performance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  t3_count:
    label: Tier 3 Nodes
    description: Number of Tier 3 nodes to create.
    type: number
    default: 1

  t3_role:
    label: Tier 3 Role
    description: |
      Optional: Chef Role. Will default to "_default"
    type: string
    default: dbmaster

  t4_name:
    label: Tier 4 Name
    description: Base name for Tier 4
    type: string
    default: tier4
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z0-9]([a-zA-Z0-9._-])*$"
      description: |
        Must begin with a letter or number and be alphanumeric or '-' and '.'

  t4_image:
    label: Tier 4 Image
    description: |
      Optional: Server image used for the server created
      as a part of this deployment.
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - CentOS 6.5
      - CentOS 6.5 (PVHVM)
      - CentOS 7 (PVHVM)
      - Debian 6.06 (Squeeze)
      - Debian 7 (Wheezy) (PVHVM)
      - Red Hat Enterprise Linux 6.5
      - Red Hat Enterprise Linux 6.5 (PVHVM)
      - Ubuntu 12.04 LTS (Precise Pangolin)
      - Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
      - Ubuntu 14.04 LTS (Trusty Tahr)
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  t4_flavor:
    label: Tier 4 Flavor
    description: |
      Optional: Rackspace Cloud Server flavor to use. The size is based on the
      amount of RAM for the provisioned server.
    type: string
    default: 1 GB Performance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  t4_count:
    label: Tier 4 Nodes
    description: Number of Tier 4 nodes to create.
    type: number
    default: 1

  t4_role:
    label: Tier 4 Role
    description: |
      Optional: Chef Role. Will default to "_default"
    type: string
    default: dbslave

  chef_server_url:
    label: Chef Server URL
    description: |
       Optional: Chef Server URL. Defaults to None, but the BASH script will
       infer the Managed Chef URL from the organization
    type: string
    default: ''

  chef_version:
    label: version
    description: |
      Optional: Version of Chef Client to use
    type: string
    default: 11.16.0

  organization:
    label: Organization
    description: |
      Required: Chef organization
    type: string
    default: ''

  chef_env:
    label: Chef Environment
    description: |
      Required: Chef Environment
    type: string
    default: _default

  validation_key:
    label: Validation Key
    description: |
      Required: chef-client will attempt to use the private key assigned to the
      chef-validator, located in /etc/chef/validation.pem. If, for any reason,
      the chef-validator is unable to make an authenticated request to the
      Chef server, the initial chef-client run will fail. Must be base64 encoded.
    type: string
    default:

  child_template:
    type: string
    default: https://raw.githubusercontent.com/rackops/heat-stack/master/stack_single.yaml

resources:
  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  tier4_setup:
    type: "OS::Heat::ResourceGroup"
    properties:
      count: { get_param: t4_count }
      resource_def:
        type: { get_param: child_template }
        properties:
          name:
            str_replace:
              template: '%deploy_name%-%name%-0%index%'
              params:
                '%deploy_name%': {get_param: 'OS::stack_name' }
                '%name%': { get_param: t4_name }
          image: { get_param: t4_image }
          flavor: { get_param: t4_flavor }
          role: { get_param: t4_role }
          chef_server_url: { get_param: chef_server_url }
          chef_version: { get_param: chef_version }
          organization: { get_param: organization }
          chef_env: { get_param: chef_env }
          validation_key: { get_param: validation_key }
          ssh_keyname: { get_resource: ssh_key }


  tier3_setup:
    type: "OS::Heat::ResourceGroup"
    properties:
      count: { get_param: t3_count }
      resource_def:
        type: { get_param: child_template }
        properties:
          name:
            str_replace:
              template: '%deploy_name%-%name%-0%index%'
              params:
                '%deploy_name%': {get_param: 'OS::stack_name' }
                '%name%': { get_param: t3_name }
          image: { get_param: t3_image }
          flavor: { get_param: t3_flavor }
          role: { get_param: t3_role }
          chef_server_url: { get_param: chef_server_url }
          chef_version: { get_param: chef_version }
          organization: { get_param: organization }
          chef_env: { get_param: chef_env }
          validation_key: { get_param: validation_key }
          ssh_keyname: { get_resource: ssh_key }


  tier2_setup:
    type: "OS::Heat::ResourceGroup"
    properties:
      count: { get_param: t2_count }
      resource_def:
        type: { get_param: child_template }
        properties:
          name:
            str_replace:
              template: '%deploy_name%-%name%-0%index%'
              params:
                '%deploy_name%': {get_param: 'OS::stack_name' }
                '%name%': { get_param: t2_name }
          image: { get_param: t2_image }
          flavor: { get_param: t2_flavor }
          role: { get_param: t2_role }
          chef_server_url: { get_param: chef_server_url }
          chef_version: { get_param: chef_version }
          organization: { get_param: organization }
          chef_env: { get_param: chef_env }
          validation_key: { get_param: validation_key }
          ssh_keyname: { get_resource: ssh_key }

  tier1_load_balancer:
    type: "Rackspace::Cloud::LoadBalancer"
    depends_on:
    - tier2_setup
    properties:
      name:
        str_replace:
          template: '%deploy_name%-%name%'
          params:
            '%name%': { get_param: t1_load_balancer }
            '%deploy_name%': { get_param: 'OS::stack_name' }
      nodes:
      - addresses: { get_attr: [tier2_setup, private_ip] }
        port: 80
        condition: ENABLED
      healthMonitor:
        type: CONNECT
        delay: 10
        timeout: 5
        attemptsBeforeDeactivation: 1
      port: 80
      protocol: HTTP
      algorithm: LEAST_CONNECTIONS
      contentCaching: ENABLED
      virtualIps:
      - type: PUBLIC
        ipVersion: IPV4
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }

  t1_loadbalancer:
    description: Tier 1 Load Balancer IP
    value: { get_attr: [tier1_load_balancer, PublicIp] }

  t2_public_ip:
    description: Tier 2 Public IP
    value: { get_attr: [tier2_setup, public_ip] }

  t2_private_ip:
    description: Tier 2 Private IP
    value: { get_attr: [tier2_setup, private_ip] }

  t3_public_ip:
    description: Tier 3 Public IP
    value: { get_attr: [tier3_setup, public_ip] }

  t3_private_ip:
    description: Tier 3 Private IP
    value: { get_attr: [tier3_setup, private_ip] }

  t4_public_ip:
    description: Tier 4 Public IP
    value: { get_attr: [tier4_setup, public_ip] }

  t4_private_ip:
    description: Tier 4 Private IP
    value: { get_attr: [tier4_setup, private_ip] }
